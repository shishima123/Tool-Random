{"version":3,"sources":["components/Header.js","components/LeftSideBar.js","components/RandomYmd.js","components/RandomString.js","App.js","serviceWorker.js","index.js"],"names":["Header","feature","this","props","className","bgColor","headerName","name","react_default","a","createElement","Component","LeftSideBar","_this$props","index","onClickFeature","classOfA","classOfLi","href","replace","isActive","react_router_dom","to","key","onClick","RandomYmd","RandomString","type","placeholder","aria-label","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","textColor","bind","assertThisInitialized","item","_this2","indexOf","map","setState","_this3","filter","components_Header","components_LeftSideBar","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qQAuBeA,0LAnBF,IACGC,EAAYC,KAAKC,MAAjBF,QACJG,EAAY,iCAAmCH,EAAQI,QACvDC,EAAaL,EAAQM,KACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKN,UAAWA,GACZI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,wBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,+CACXI,EAAAC,EAAAC,cAAA,0BAEJF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,2DACXI,EAAAC,EAAAC,cAAA,UAAKJ,aAZRK,qBCoBNC,mLApBF,IAAAC,EACsCX,KAAKC,MAAxCF,EADHY,EACGZ,QAASa,EADZD,EACYC,MAAOC,EADnBF,EACmBE,eACpBC,EAAW,mDACXC,EAAY,YACZC,EAAOjB,EAAQM,KAAKY,QAAQ,IAAK,IAKrC,OAJIlB,EAAQmB,WACRJ,EAAWA,EAASG,QAAQ,aAAc,cAC1CF,GAAahB,EAAQI,SAGrBG,EAAAC,EAAAC,cAAA,MAAIN,UAAWa,GACXT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMjB,UAAWY,EACbM,GAAIJ,EACJK,IAAKT,EACLU,QAAST,GAAiBd,EAAQM,cAf5BI,aCQXc,mLANP,OACIjB,EAAAC,EAAAC,cAAA,qBAHYC,aCyDTe,mLAtDP,OACIlB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,OACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,iCACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,oBAAhB,WAEJI,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,WAAWC,aAAW,aAC9ErB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,sBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,oBAAhB,OAIRI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,iCACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,oBAAhB,SAEJI,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,WAAWC,aAAW,cAGlFrB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,iCACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,oBAAhB,uBAEJI,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,WAAWC,aAAW,cAGlFrB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,kCACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,SAAON,UAAU,oBAAjB,SAEJI,EAAAC,EAAAC,cAAA,UAAQN,UAAU,gBACdI,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,8BAIRF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,iCACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,oBAAhB,aAEJI,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,WAAWC,aAAW,cAGlFrB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,QACXI,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,SAASvB,UAAU,mBAAhC,oBA/CGO,aC+DZmB,cA1Db,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9B,KAAA4B,IACZC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlC,QACKmC,MAAQ,CACXpC,QAAS,CACP,CAAEM,KAAQ,gBAAiBa,UAAY,EAAMf,QAAW,aAAciC,UAAa,gBACnF,CAAE/B,KAAQ,aAAca,UAAY,EAAOf,QAAW,aAAciC,UAAa,kBAGrFP,EAAKhB,eAAiBgB,EAAKhB,eAAewB,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IARVA,8EAWCU,GAAM,IAAAC,EAAAxC,KACnB,OAAO,WAAM,IACHD,EAAYyC,EAAKL,MAAjBpC,QACFa,EAAQb,EAAQ0C,QAAQF,GAC1BJ,EAAQpC,EACZoC,EAAMO,IAAI,SAACH,GAAD,OAAUA,EAAKrB,UAAW,IACpCiB,EAAMvB,GAAOM,UAAW,EACxBsB,EAAKG,SAAS,CACZ5C,QAASA,sCAKN,IAAA6C,EAAA5C,KACP,OACEM,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAA,OAAKN,UAAU,OAEXF,KAAKmC,MAAMpC,QAAQ8C,OAAO,SAACN,GAAD,OAA4B,IAAlBA,EAAKrB,WAAmBwB,IAAI,SAACH,EAAM3B,GAAP,OAAiBN,EAAAC,EAAAC,cAACsC,EAAD,CAAQ/C,QAASwC,EAAMlB,IAAKT,MAG/GN,EAAAC,EAAAC,cAAA,OAAKN,UAAU,mBACbI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,OACbI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,8BACbI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,mBACXF,KAAKmC,MAAMpC,QAAQ2C,IAAI,SAACH,EAAM3B,GAAP,OACtBN,EAAAC,EAAAC,cAACuC,EAAD,CACEhD,QAASwC,EACTlB,IAAKT,EACLC,eAAgB+B,EAAK/B,eAAe0B,SAK5CjC,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eACbI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,KAAK,aAAaC,UAAW1B,IACzCjB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,KAAK,gBAAgBC,UAAWzB,gBAhD1Cf,aCKEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5f20364b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./component.css\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        const { feature } = this.props;\r\n        let className = \"container-fluid header-height \" + feature.bgColor;\r\n        let headerName = feature.name;\r\n        return (\r\n            <div className={className}>\r\n                <div className=\"row w-100 h-100 mx-0\">\r\n                    <div className=\"col-2 text-center d-flex align-items-center\">\r\n                        <h4>Tool Random</h4>\r\n                    </div>\r\n                    <div className=\"col-10 d-flex justify-content-center align-items-center\">\r\n                        <h4>{headerName}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass LeftSideBar extends Component {\r\n    render() {\r\n        const { feature, index, onClickFeature } = this.props;\r\n        let classOfA = \"nav-link text-muted text-center font-weight-bold\";\r\n        let classOfLi = \"nav-item \";\r\n        let href = feature.name.replace(' ', '');\r\n        if (feature.isActive) {\r\n            classOfA = classOfA.replace(\"text-muted\", \"text-light\");\r\n            classOfLi += feature.bgColor;\r\n        }\r\n        return (\r\n            <li className={classOfLi}>\r\n                <Link className={classOfA}\r\n                    to={href}\r\n                    key={index}\r\n                    onClick={onClickFeature}>{feature.name}</Link>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeftSideBar;\r\n","import React, { Component } from 'react';\r\n\r\nclass RandomYmd extends Component {\r\n    render() {\r\n        return (\r\n            <p>a</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomYmd;","import React, { Component } from 'react';\r\nimport './component.css';\r\n\r\nclass RandomString extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-5 text-right\">\r\n                    <div className=\"input-group mb-3 input__width\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Prefix</span>\r\n                        </div>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" />\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\">0</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-3 input__width\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">From</span>\r\n                        </div>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" />\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-3 input__width\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">&nbsp;&nbsp;To&nbsp;&nbsp;</span>\r\n                        </div>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group d-flex input__width\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <label className=\"input-group-text\">Type</label>\r\n                        </div>\r\n                        <select className=\"form-control\">\r\n                            <option>Random</option>\r\n                            <option>Order List</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-3 input__width\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Quantity</span>\r\n                        </div>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" />\r\n                    </div>\r\n\r\n                    <div className=\"pr-5\">\r\n                        <button type=\"button\" className=\"btn btn-primary\">Random</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomString;","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport LeftSideBar from './components/LeftSideBar';\r\nimport RandomYmd from './components/RandomYmd';\r\nimport RandomString from './components/RandomString';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      feature: [\r\n        { \"name\": \"Random String\", \"isActive\": true, \"bgColor\": \"bg-primary\", \"textColor\": \"text-primary\" },\r\n        { \"name\": \"Random Ymd\", \"isActive\": false, \"bgColor\": \"bg-success\", \"textColor\": \"text-success\" }\r\n      ]\r\n    }\r\n    this.onClickFeature = this.onClickFeature.bind(this);\r\n  }\r\n\r\n  onClickFeature(item) {\r\n    return () => {\r\n      const { feature } = this.state;\r\n      const index = feature.indexOf(item);\r\n      let state = feature;\r\n      state.map((item) => item.isActive = false)\r\n      state[index].isActive = true;\r\n      this.setState({\r\n        feature: feature\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div className=\"App\">\r\n          {\r\n            this.state.feature.filter((item) => item.isActive === true).map((item, index) => <Header feature={item} key={index} />)\r\n          }\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-2 sidebar__height px-0\">\r\n                <ul className=\"nav flex-column\">\r\n                  {this.state.feature.map((item, index) =>\r\n                    <LeftSideBar\r\n                      feature={item}\r\n                      key={index}\r\n                      onClickFeature={this.onClickFeature(item)}\r\n                    />\r\n                  )}\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-10 mt-5\">\r\n                <HashRouter path=\"/RandomYmd\" component={RandomYmd} />\r\n                <HashRouter path=\"/RandomString\" component={RandomString} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
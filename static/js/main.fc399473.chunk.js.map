{"version":3,"sources":["components/Header.js","components/RandomYmd.js","components/RandomString.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["Header","feature","this","props","className","bgColor","headerName","name","react_default","a","createElement","Component","RandomYmd","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","YearFrRef","React","createRef","YearToRef","MonthFrRef","MonthToRef","DayFrRef","DayToRef","qtyRef","onRandomYmd","bind","assertThisInitialized","_this$props","onRandom","onChangeHeader","header","onNotify","YearFr","Number","current","value","YearTo","MonthFr","MonthTo","DayFr","DayTo","qty","result","chkValidateInput","i","year","Math","floor","random","month","day","toString","alert","type","From","To","defaultValue","ref","onClick","RandomString","state","length","isDisable","prefixRef","fromRef","toRef","typeRef","onRandomString","onChangeLen","onChangeSelectBox","prefix","from","to","isNaN","number","numberLen","toLen","lenPrefix","lenTo","lenQty","setState","e","target","onChange","disabled","TextArea","handleChange","event","rows","App","isActive","item","index","indexOf","map","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","_this2","getFeature","filter","components_Header","key","components_RandomString","components_TextArea","components_RandomYmd","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","transition","Flip","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAoBeA,0LAhBF,IACGC,EAAYC,KAAKC,MAAjBF,QACJG,EAAY,iDAAmDH,EAAQI,QACvEC,EAAaL,EAAQM,KACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKN,UAAWA,GACZI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,aACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,2DACXI,EAAAC,EAAAC,cAAA,MAAIN,UAAU,wBAAwBE,aATzCK,cCyHNC,qBAvHX,SAAAA,EAAYT,GAAO,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAU,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhB,KAAMC,KACDgB,UAAYC,IAAMC,YACvBR,EAAKS,UAAYF,IAAMC,YACvBR,EAAKU,WAAaH,IAAMC,YACxBR,EAAKW,WAAaJ,IAAMC,YACxBR,EAAKY,SAAWL,IAAMC,YACtBR,EAAKa,SAAWN,IAAMC,YACtBR,EAAKc,OAASP,IAAMC,YACpBR,EAAKe,YAAcf,EAAKe,YAAYC,KAAjBf,OAAAgB,EAAA,EAAAhB,CAAAD,IATJA,6EAYL,IAAAkB,EAC6C7B,KAAKC,MAApD6B,EADED,EACFC,SAAUC,EADRF,EACQE,eAAgBC,EADxBH,EACwBG,OAAQC,EADhCJ,EACgCI,SAEtCC,EAASC,OAAOnC,KAAKiB,UAAUmB,QAAQC,OACvCC,EAASH,OAAOnC,KAAKoB,UAAUgB,QAAQC,OACvCE,EAAUJ,OAAOnC,KAAKqB,WAAWe,QAAQC,OACzCG,EAAUL,OAAOnC,KAAKsB,WAAWc,QAAQC,OACzCI,EAAQN,OAAOnC,KAAKuB,SAASa,QAAQC,OACrCK,EAAQP,OAAOnC,KAAKwB,SAASY,QAAQC,OACrCM,EAAMR,OAAOnC,KAAKyB,OAAOW,QAAQC,OACjCO,EAAS,GACb,GAAK5C,KAAK6C,iBAAiB,OAAQX,EAAQI,GAEpC,GAAKtC,KAAK6C,iBAAiB,QAASN,EAASC,GAE7C,GAAKxC,KAAK6C,iBAAiB,MAAOJ,EAAOC,GAG5C,IAAK,IAAII,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAC1B,IAAIC,EAAOC,KAAKC,MAAOD,KAAKE,UAAaZ,EAAS,EAAKJ,GAAWA,GAC9DiB,EAAQH,KAAKC,MAAOD,KAAKE,UAAaV,EAAU,EAAKD,GAAYA,GACrE,GAAc,IAAVY,EAAa,CACb,IAAIC,EAAMJ,KAAKC,MAAOD,KAAKE,UAAaR,EAAQ,EAAKD,GAAUA,GAC3DW,EAAM,KACNA,GAAY,QAGhBA,EAAMJ,KAAKC,MAAOD,KAAKE,UAAaR,EAAQ,EAAKD,GAAUA,GAG3DU,EAAQ,KACRA,EAAQ,IAAMA,GAGdC,EAAM,KACNA,EAAM,IAAMA,GAEhBR,GAAUG,EAAKM,WAAaF,EAAME,WAAaD,EAAIC,WAAa,UArBpEC,MAAM,gCAFNA,MAAM,kCAFNA,MAAM,4BA4BVxB,EAASc,GACTb,EAAeC,EAAO,IACtBC,6CAGasB,EAAMC,EAAMC,GACzB,GAAa,SAATF,GACA,GAAIC,EAAOC,EACP,OAAO,OAER,GAAa,UAATF,GACP,GAAKC,EAAOC,GAAQD,EAAO,IAAQC,EAAK,GACpC,OAAO,OAGX,GAAKD,EAAOC,GAAQD,EAAO,IAAQC,EAAK,GACpC,OAAO,EAGf,OAAO,mCAIP,OACInD,EAAAC,EAAAC,cAAA,OAAKN,UAAU,0DACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,iEAAhB,SAEJI,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,0CAA0CwD,aAAa,OAAOC,IAAK3D,KAAKiB,YACrGX,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,yCAAyCwD,aAAa,OAAOC,IAAK3D,KAAKoB,aAGxGd,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,iEAAhB,UAEJI,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,0CAA0CwD,aAAa,IAAIC,IAAK3D,KAAKqB,aAClGf,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,yCAAyCwD,aAAa,KAAKC,IAAK3D,KAAKsB,cAGtGhB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,iEAAhB,QAEJI,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,0CAA0CwD,aAAa,IAAIC,IAAK3D,KAAKuB,WAClGjB,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,yCAAyCwD,aAAa,KAAKC,IAAK3D,KAAKwB,YAGtGlB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,uCAAhB,aAEJI,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,eAAewD,aAAa,KAAKC,IAAK3D,KAAKyB,UAG5EnB,EAAAC,EAAAC,cAAA,OAAKN,UAAU,6CACXI,EAAAC,EAAAC,cAAA,UAAQ+C,KAAK,SAASrD,UAAU,uDAAuD0D,QAAS5D,KAAK0B,aAArG,mBAjHIjB,cC2IToD,cA1IX,SAAAA,EAAY5D,GAAO,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAA6D,IACflD,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAiD,GAAA7C,KAAAhB,KAAMC,KACD6D,MAAQ,CACTC,OAAQ,EACRC,WAAW,GAEfrD,EAAKsD,UAAY/C,IAAMC,YACvBR,EAAKuD,QAAUhD,IAAMC,YACrBR,EAAKwD,MAAQjD,IAAMC,YACnBR,EAAKyD,QAAUlD,IAAMC,YACrBR,EAAKc,OAASP,IAAMC,YACpBR,EAAK0D,eAAiB1D,EAAK0D,eAAe1C,KAApBf,OAAAgB,EAAA,EAAAhB,CAAAD,IACtBA,EAAK2D,YAAc3D,EAAK2D,YAAY3C,KAAjBf,OAAAgB,EAAA,EAAAhB,CAAAD,IACnBA,EAAK4D,kBAAoB5D,EAAK4D,kBAAkB5C,KAAvBf,OAAAgB,EAAA,EAAAhB,CAAAD,IAbVA,gFAgBF,IAAAkB,EAC0C7B,KAAKC,MAApD6B,EADKD,EACLC,SAAUC,EADLF,EACKE,eAAgBC,EADrBH,EACqBG,OAAQC,EAD7BJ,EAC6BI,SAEtCuC,EAASxE,KAAKiE,UAAU7B,QAAQC,MAChCoC,EAAOtC,OAAOnC,KAAKkE,QAAQ9B,QAAQC,OACnCqC,EAAKvC,OAAOnC,KAAKmE,MAAM/B,QAAQC,OAC/BkB,EAAOvD,KAAKoE,QAAQhC,QAAQC,MAC5BM,EAAMR,OAAOnC,KAAKyB,OAAOW,QAAQC,OACjCO,EAAS,GACb,GAAa,KAAT6B,GAAsB,KAAPC,EACfpB,MAAM,8BACH,GAAIqB,MAAMF,IAASE,MAAMD,GAC5BpB,MAAM,+BAEL,GAAImB,EAAOC,EACZpB,MAAM,2DAGN,GAAa,WAATC,EACA,IAAK,IAAIT,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAC1B,IAAI8B,EAAS5B,KAAKC,MAAOD,KAAKE,UAAawB,EAAK,EAAKD,GAASA,GAC1DI,EAAYD,EAAOvB,WAAWU,OAC9Be,EAAQJ,EAAGrB,WAAWU,OAC1B,GAAIc,EAAYC,EACZ,IAAK,IAAIhC,EAAI+B,EAAW/B,EAAIgC,EAAOhC,IAC/B8B,EAAS,IAAMA,EAGvBhC,GAAU4B,EAASI,EAAS,UAGhC,IAAK,IAAI9B,EAAI2B,EAAM3B,GAAK4B,EAAI5B,IACxBF,GAAU4B,EAAS1B,EAAI,KAKnChB,EAASc,GACTb,EAAeC,EAAO,IACtBC,0CAIA,IACI8C,EADS/E,KAAKiE,UAAU7B,QAAQC,MACb0B,OAEnBiB,EADKhF,KAAKmE,MAAM/B,QAAQC,MACb0B,OAEXkB,EADMjF,KAAKyB,OAAOW,QAAQC,MACb0B,OAEbA,EAAS,EAETA,EADS,WAFF/D,KAAKoE,QAAQhC,QAAQC,MAGnB0C,EAAYC,EAEZD,EAAYE,EAEzBjF,KAAKkF,SAAS,CAAEnB,OAAQA,8CAGVoB,GACd,IAAInB,EAEAA,EADmB,eAAnBmB,EAAEC,OAAO/C,MAKbrC,KAAKkF,SAAS,CAAElB,UAAWA,qCAK3B,OACI1D,EAAAC,EAAAC,cAAA,OAAKN,UAAU,0DACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,iEAAhB,WAEJI,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,eAAeyD,IAAK3D,KAAKiE,UAAWoB,SAAUrF,KAAKsE,cAChFhE,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,8CAA8CF,KAAK8D,MAAMC,UAIjFzD,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,iEAAhB,SAEJI,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,eAAewD,aAAa,MAAMC,IAAK3D,KAAKkE,WAG7E5D,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,iEAAhB,OAEJI,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,eAAewD,aAAa,MAAMC,IAAK3D,KAAKmE,MAAOkB,SAAUrF,KAAKsE,eAGnGhE,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,SAAON,UAAU,iEAAjB,SAEJI,EAAAC,EAAAC,cAAA,UAAQN,UAAU,eAAeyD,IAAK3D,KAAKoE,QAASiB,SAAUrF,KAAKuE,mBAC/DjE,EAAAC,EAAAC,cAAA,UAAQ6B,MAAM,UAAd,UACA/B,EAAAC,EAAAC,cAAA,UAAQ6B,MAAM,cAAd,gBAIR/B,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,uBACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAU,iEAAhB,aAEJI,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAOrD,UAAU,eAAewD,aAAa,KAAKC,IAAK3D,KAAKyB,OAAQ4D,SAAUrF,KAAKsE,YAAagB,WAAWtF,KAAK8D,MAAME,WAAoB,MAG1J1D,EAAAC,EAAAC,cAAA,OAAKN,UAAU,6CACXI,EAAAC,EAAAC,cAAA,UAAQ+C,KAAK,SAASrD,UAAU,+BAA+B0D,QAAS5D,KAAKqE,gBAA7E,mBApIO5D,aC4BZ8E,cA7BX,SAAAA,IAAc,IAAA5E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAuF,IACV5E,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA2E,GAAAvE,KAAAhB,QACKwF,aAAe7E,EAAK6E,aAAa7D,KAAlBf,OAAAgB,EAAA,EAAAhB,CAAAD,IAFVA,4EAKD8E,GACT,OAAOzF,KAAKC,MAAM6B,SAAS2D,EAAML,OAAO/C,wCAEnC,IAAAR,EACsB7B,KAAKC,MAAxB2C,EADHf,EACGe,OAAQZ,EADXH,EACWG,OACZ9B,EAAY,oFAIhB,MAHuB,cAAnB8B,EAAO7B,UACPD,GAAa,cAAgB8B,EAAO7B,SAGpCG,EAAAC,EAAAC,cAAA,OAAKN,UAAU,+DACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,6BACXI,EAAAC,EAAAC,cAAA,QAAMN,UAAWA,GAAjB,YAGRI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eACXI,EAAAC,EAAAC,cAAA,YAAUN,UAAU,2CAA2CwF,KAAK,KAAKrD,MAAOO,EAAQyC,SAAUrF,KAAKwF,wBAvBpG/E,oBC2GRkF,cAnGX,SAAAA,IAAc,IAAAhF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAA2F,IACVhF,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA+E,GAAA3E,KAAAhB,QACK8D,MAAQ,CACT/D,QAAS,CACL,CAAEM,KAAQ,cAAeuF,UAAY,EAAMzF,QAAW,aACtD,CAAEE,KAAQ,gBAAiBuF,UAAY,EAAOzF,QAAW,iBACzD,CAAEE,KAAQ,wBAAyBuF,UAAY,EAAOzF,QAAW,oBAErEyC,OAAQ,IAEZjC,EAAKoB,eAAiBpB,EAAKoB,eAAeJ,KAApBf,OAAAgB,EAAA,EAAAhB,CAAAD,IACtBA,EAAKmB,SAAWnB,EAAKmB,SAASH,KAAdf,OAAAgB,EAAA,EAAAhB,CAAAD,IAChBA,EAAKsB,SAAWtB,EAAKsB,SAASN,KAAdf,OAAAgB,EAAA,EAAAhB,CAAAD,IAZNA,8EAeCkF,GAAM,IACT9F,EAAYC,KAAK8D,MAAjB/D,QACF+F,EAAQ/F,EAAQgG,QAAQF,GAC1B/B,EAAQ/D,EACZ+D,EAAMkC,IAAI,SAACH,GAAD,OAAUA,EAAKD,UAAW,IACpC9B,EAAMgC,GAAOF,UAAW,EACxB5F,KAAKkF,SAAS,CACVnF,QAASA,qCAIR6C,GACL5C,KAAKkF,SAAS,CAAEtC,OAAQA,uCAIxB,OAAOqD,IAAMC,QAAQ,gCAAuB,CACxCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXtG,UAAW,sDAKV,IAAAuG,EAAAzG,KACD0G,EAAa1G,KAAK8D,MAAM/D,QAAQ4G,OAAO,SAACd,GAAD,OAA4B,IAAlBA,EAAKD,WAC1D,OACItF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,OAEPwG,EAAWV,IAAI,SAACH,EAAMC,GAAP,OACXxF,EAAAC,EAAAC,cAACoG,EAAD,CACI7G,QAAS8F,EACTgB,IAAKf,MAIjBxF,EAAAC,EAAAC,cAAA,OAAKN,UAAU,wCACXI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,2CACXI,EAAAC,EAAAC,cAACsG,EAAD,CACIhF,SAAU9B,KAAK8B,SACfC,eAAgB/B,KAAK+B,eACrBC,OAAQhC,KAAK8D,MAAM/D,QACnBkC,SAAUjC,KAAKiC,WAGfyE,EAAWV,IAAI,SAACH,EAAMC,GAAP,OACXxF,EAAAC,EAAAC,cAACuG,EAAD,CACIF,IAAKf,EACLlD,OAAQ6D,EAAK3C,MAAMlB,OACnBd,SAAU2E,EAAK3E,SACfE,OAAQ6D,MAIpBvF,EAAAC,EAAAC,cAACwG,EAAD,CACIlF,SAAU9B,KAAK8B,SACfC,eAAgB/B,KAAK+B,eACrBC,OAAQhC,KAAK8D,MAAM/D,QACnBkC,SAAUjC,KAAKiC,WAGnB3B,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACId,SAAS,YACTC,UAAW,IACXC,iBAAe,EACfa,aAAW,EACXZ,cAAY,EACZa,KAAK,EACLC,yBAAyB,EACzBZ,WAAW,EACXD,cAAY,EACZc,WAAYC,gBA3FtB7G,aCGE8G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvH,EAAAC,EAAAC,cAACsH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fc399473.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./component.css\";\n\nclass Header extends Component {\n    render() {\n        const { feature } = this.props;\n        let className = \"container-fluid header-height content__shadow \" + feature.bgColor;\n        let headerName = feature.name;\n        return (\n            <div className={className}>\n                <div className=\"row h-100\">\n                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\n                        <h2 className=\"m-0 font-weight-bold\">{headerName}</h2>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './component.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass RandomYmd extends Component {\n    constructor(props) {\n        super(props);\n        this.YearFrRef = React.createRef();\n        this.YearToRef = React.createRef();\n        this.MonthFrRef = React.createRef();\n        this.MonthToRef = React.createRef();\n        this.DayFrRef = React.createRef();\n        this.DayToRef = React.createRef();\n        this.qtyRef = React.createRef();\n        this.onRandomYmd = this.onRandomYmd.bind(this);\n    }\n\n    onRandomYmd() {\n        const { onRandom, onChangeHeader, header, onNotify } = this.props;\n\n        let YearFr = Number(this.YearFrRef.current.value);\n        let YearTo = Number(this.YearToRef.current.value);\n        let MonthFr = Number(this.MonthFrRef.current.value);\n        let MonthTo = Number(this.MonthToRef.current.value);\n        let DayFr = Number(this.DayFrRef.current.value);\n        let DayTo = Number(this.DayToRef.current.value);\n        let qty = Number(this.qtyRef.current.value);\n        let result = '';\n        if (!this.chkValidateInput('Year', YearFr, YearTo)) {\n            alert('Please check Year value.');\n        } else if (!this.chkValidateInput('Month', MonthFr, MonthTo)) {\n            alert('Please check Month value.');\n        } else if (!this.chkValidateInput('Day', DayFr, DayTo)) {\n            alert('Please check Day value.');\n        } else {\n            for (let i = 0; i < qty; i++) {\n                var year = Math.floor((Math.random() * ((YearTo + 1) - YearFr)) + YearFr);\n                var month = Math.floor((Math.random() * ((MonthTo + 1) - MonthFr)) + MonthFr);\n                if (month === 2) {\n                    var day = Math.floor((Math.random() * ((DayTo + 1) - DayFr)) + DayFr);\n                    if (day > 28) {\n                        day = day - 3;\n                    }\n                } else {\n                    day = Math.floor((Math.random() * ((DayTo + 1) - DayFr)) + DayFr);\n                }\n\n                if (month < 10) {\n                    month = '0' + month;\n                }\n\n                if (day < 10) {\n                    day = '0' + day;\n                }\n                result += year.toString() + month.toString() + day.toString() + \"\\r\";\n            }\n        }\n        onRandom(result);\n        onChangeHeader(header[2]);\n        onNotify();\n    }\n\n    chkValidateInput(type, From, To) {\n        if (type === \"Year\") {\n            if (From > To) {\n                return false;\n            }\n        } else if (type === \"Month\") {\n            if ((From > To) || (From > 12) || (To > 12)) {\n                return false;\n            }\n        } else {\n            if ((From > To) || (From > 31) || (To > 31)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render() {\n        return (\n            <div className=\"col-3 text-right content__shadow bg-white py-4 rounded\">\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\" >Year</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius_right\" defaultValue=\"2019\" ref={this.YearFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius_left\" defaultValue=\"2019\" ref={this.YearToRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Month</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius_right\" defaultValue=\"1\" ref={this.MonthFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius_left\" defaultValue=\"12\" ref={this.MonthToRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Day</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius_right\" defaultValue=\"1\" ref={this.DayFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius_left\" defaultValue=\"30\" ref={this.DayToRef} />\n                </div>\n\n                <div className=\"input-group mb-5\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\">Quantity</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"10\" ref={this.qtyRef} />\n                </div>\n\n                <div className=\"input-group d-flex justify-content-center\">\n                    <button type=\"button\" className=\"btn purple-gradient text-white btn__RandomYmd-margin\" onClick={this.onRandomYmd}>Random</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomYmd;","import React, { Component } from 'react';\nimport './component.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass RandomString extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            length: 3,\n            isDisable: false\n        }\n        this.prefixRef = React.createRef();\n        this.fromRef = React.createRef();\n        this.toRef = React.createRef();\n        this.typeRef = React.createRef();\n        this.qtyRef = React.createRef();\n        this.onRandomString = this.onRandomString.bind(this);\n        this.onChangeLen = this.onChangeLen.bind(this);\n        this.onChangeSelectBox = this.onChangeSelectBox.bind(this);\n    }\n\n    onRandomString() {\n        const { onRandom, onChangeHeader, header, onNotify } = this.props;\n\n        let prefix = this.prefixRef.current.value;\n        let from = Number(this.fromRef.current.value);\n        let to = Number(this.toRef.current.value);\n        let type = this.typeRef.current.value;\n        let qty = Number(this.qtyRef.current.value);\n        let result = '';\n        if (from === '' || to === '') {\n            alert('Please enter From-To.')\n        } else if (isNaN(from) || isNaN(to)) {\n            alert('From - To must number.')\n        }\n        else if (from > to) {\n            alert('From is bigger than To. Please re-enter correctly.')\n        } else {\n\n            if (type === 'random') {\n                for (let i = 0; i < qty; i++) {\n                    let number = Math.floor((Math.random() * ((to + 1) - from)) + from);\n                    let numberLen = number.toString().length;\n                    let toLen = to.toString().length;\n                    if (numberLen < toLen) {\n                        for (let i = numberLen; i < toLen; i++) {\n                            number = '0' + number;\n                        }\n                    }\n                    result += prefix + number + '\\r';\n                }\n            } else {\n                for (let i = from; i <= to; i++) {\n                    result += prefix + i + '\\r';\n                }\n            }\n        }\n\n        onRandom(result);\n        onChangeHeader(header[1]);\n        onNotify();\n    }\n\n    onChangeLen() {\n        let prefix = this.prefixRef.current.value;\n        let lenPrefix = prefix.length;\n        let to = this.toRef.current.value;\n        let lenTo = to.length;\n        let qty = this.qtyRef.current.value;\n        let lenQty = qty.length;\n        let type = this.typeRef.current.value;\n        let length = 0;\n        if (type === 'random') {\n            length = lenPrefix + lenTo;\n        } else {\n            length = lenPrefix + lenQty;\n        }\n        this.setState({ length: length })\n    }\n\n    onChangeSelectBox(e) {\n        let isDisable;\n        if (e.target.value === 'order_list') {\n            isDisable = true;\n        } else {\n            isDisable = false;\n        }\n        this.setState({ isDisable: isDisable })\n\n    }\n\n    render() {\n        return (\n            <div className=\"col-3 text-right content__shadow bg-white py-4 rounded\">\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Prefix</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" ref={this.prefixRef} onChange={this.onChangeLen} />\n                    <div className=\"input-group-append \">\n                        <span className=\"input-group-text cloudy-knoxville-gradient\">{this.state.length}</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\" >From</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"000\" ref={this.fromRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\" >To</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"100\" ref={this.toRef} onChange={this.onChangeLen} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <label className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Type</label>\n                    </div>\n                    <select className=\"form-control\" ref={this.typeRef} onChange={this.onChangeSelectBox}>\n                        <option value='random'>Random</option>\n                        <option value='order_list'>Order List</option>\n                    </select>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Quantity</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"10\" ref={this.qtyRef} onChange={this.onChangeLen} disabled={(this.state.isDisable) ? true : ''} />\n                </div>\n\n                <div className=\"input-group d-flex justify-content-center\">\n                    <button type=\"button\" className=\"btn blue-gradient text-white\" onClick={this.onRandomString}>Random</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomString;","import React, { Component } from 'react';\n\nclass TextArea extends Component {\n    constructor() {\n        super();\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        return this.props.onRandom(event.target.value);\n    }\n    render() {\n        const { result, header } = this.props;\n        let className = \"input-group-text w-100 d-flex justify-content-center label__border-radius_bottom \";\n        if (header.bgColor !== 'bg-danger') {\n            className += \"text-white \" + header.bgColor;\n        }\n        return (\n            <div className=\"col-3 text-right content__shadow bg-white py-4 mx-3 rounded\">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend w-100\">\n                        <span className={className}>Result</span>\n                    </div>\n                </div>\n                <div className=\"input-group\">\n                    <textarea className=\"form-control textarea__border-radius_top\" rows=\"11\" value={result} onChange={this.handleChange} ></textarea>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextArea;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport RandomYmd from './components/RandomYmd';\nimport RandomString from './components/RandomString';\nimport TextArea from './components/TextArea';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Flip } from 'react-toastify';\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            feature: [\n                { \"name\": \"Tool Random\", \"isActive\": true, \"bgColor\": \"bg-danger\" },\n                { \"name\": \"Random String\", \"isActive\": false, \"bgColor\": \"blue-gradient\" },\n                { \"name\": \"Random Year-Month-Day\", \"isActive\": false, \"bgColor\": \"purple-gradient\" },\n            ],\n            result: ''\n        }\n        this.onChangeHeader = this.onChangeHeader.bind(this);\n        this.onRandom = this.onRandom.bind(this);\n        this.onNotify = this.onNotify.bind(this);\n    }\n\n    onChangeHeader(item) {\n        const { feature } = this.state;\n        const index = feature.indexOf(item);\n        let state = feature;\n        state.map((item) => item.isActive = false)\n        state[index].isActive = true;\n        this.setState({\n            feature: feature\n        });\n    }\n\n    onRandom(result) {\n        this.setState({ result: result });\n    }\n\n    onNotify() {\n        return toast.success('🦄 Random Complete!', {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false,\n            className: 'rotateY animated'\n        });\n\n    }\n\n    render() {\n        let getFeature = this.state.feature.filter((item) => item.isActive === true);\n        return (\n            <div className=\"App\">\n                {\n                    getFeature.map((item, index) =>\n                        <Header\n                            feature={item}\n                            key={index}\n                        />)\n                }\n\n                <div className=\"container-fluid mt-4 content__height\">\n                    <div className=\"row d-flex justify-content-center h-100\">\n                        <RandomString\n                            onRandom={this.onRandom}\n                            onChangeHeader={this.onChangeHeader}\n                            header={this.state.feature}\n                            onNotify={this.onNotify}\n                        />\n                        {\n                            getFeature.map((item, index) =>\n                                <TextArea\n                                    key={index}\n                                    result={this.state.result}\n                                    onRandom={this.onRandom}\n                                    header={item}\n                                />)\n                        }\n\n                        <RandomYmd\n                            onRandom={this.onRandom}\n                            onChangeHeader={this.onChangeHeader}\n                            header={this.state.feature}\n                            onNotify={this.onNotify}\n                        />\n\n                        <ToastContainer\n                            position=\"top-right\"\n                            autoClose={3000}\n                            hideProgressBar\n                            newestOnTop\n                            closeOnClick\n                            rtl={false}\n                            pauseOnVisibilityChange={false}\n                            draggable={false}\n                            pauseOnHover\n                            transition={Flip}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
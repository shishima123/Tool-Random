{"version":3,"sources":["components/Header.js","components/RandomYmd.js","components/RandomString.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["Header","feature","this","props","className","bgColor","headerName","name","react_default","a","createElement","Component","RandomYmd","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","YearFrRef","React","createRef","YearToRef","MonthFrRef","MonthToRef","DayFrRef","DayToRef","qtyRef","onRandomYmd","bind","assertThisInitialized","_this$props","onRandom","onChangeHeader","header","YearFr","Number","current","value","YearTo","MonthFr","MonthTo","DayFr","DayTo","qty","result","chkValidateInput","i","year","Math","floor","random","month","day","toString","alert","type","From","To","defaultValue","ref","onClick","RandomString","state","length","isDisable","prefixRef","fromRef","toRef","typeRef","onRandomString","onChangeLen","onChangeSelectBox","prefix","from","to","isNaN","number","numberLen","toLen","lenPrefix","lenTo","lenQty","setState","e","target","onChange","disabled","TextArea","handleChange","event","rows","App","isActive","item","index","indexOf","map","filter","components_Header","key","components_RandomString","components_TextArea","components_RandomYmd","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fae42662.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./component.css\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        const { feature } = this.props;\r\n        let className = \"container-fluid header-height content__shadow \" + feature.bgColor;\r\n        let headerName = feature.name;\r\n        return (\r\n            <div className={className}>\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\r\n                        <h2 className=\"m-0 font-weight-bold\">{headerName}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass RandomYmd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.YearFrRef = React.createRef();\r\n        this.YearToRef = React.createRef();\r\n        this.MonthFrRef = React.createRef();\r\n        this.MonthToRef = React.createRef();\r\n        this.DayFrRef = React.createRef();\r\n        this.DayToRef = React.createRef();\r\n        this.qtyRef = React.createRef();\r\n        this.onRandomYmd = this.onRandomYmd.bind(this);\r\n    }\r\n\r\n    onRandomYmd() {\r\n        const { onRandom, onChangeHeader, header } = this.props;\r\n\r\n        let YearFr = Number(this.YearFrRef.current.value);\r\n        let YearTo = Number(this.YearToRef.current.value);\r\n        let MonthFr = Number(this.MonthFrRef.current.value);\r\n        let MonthTo = Number(this.MonthToRef.current.value);\r\n        let DayFr = Number(this.DayFrRef.current.value);\r\n        let DayTo = Number(this.DayToRef.current.value);\r\n        let qty = Number(this.qtyRef.current.value);\r\n        let result = '';\r\n        if (!this.chkValidateInput('Year', YearFr, YearTo)) {\r\n            alert('Please check Year value.');\r\n        } else if (!this.chkValidateInput('Month', MonthFr, MonthTo)) {\r\n            alert('Please check Month value.');\r\n        } else if (!this.chkValidateInput('Day', DayFr, DayTo)) {\r\n            alert('Please check Day value.');\r\n        } else {\r\n            for (let i = 0; i < qty; i++) {\r\n                var year = Math.floor((Math.random() * ((YearTo + 1) - YearFr)) + YearFr);\r\n                var month = Math.floor((Math.random() * ((MonthTo + 1) - MonthFr)) + MonthFr);\r\n                if (month === 2) {\r\n                    var day = Math.floor((Math.random() * ((DayTo + 1) - DayFr)) + DayFr);\r\n                    if (day > 28) {\r\n                        day = day - 3;\r\n                    }\r\n                } else {\r\n                    day = Math.floor((Math.random() * ((DayTo + 1) - DayFr)) + DayFr);\r\n                }\r\n\r\n                if (month < 10) {\r\n                    month = '0' + month;\r\n                }\r\n\r\n                if (day < 10) {\r\n                    day = '0' + day;\r\n                }\r\n                result += year.toString() + month.toString() + day.toString() + \"\\r\";\r\n            }\r\n        }\r\n        onRandom(result);\r\n        onChangeHeader(header[2]);\r\n    }\r\n\r\n    chkValidateInput(type, From, To) {\r\n        if (type === \"Year\") {\r\n            if (From > To) {\r\n                return false;\r\n            }\r\n        } else if (type === \"Month\") {\r\n            if ((From > To) || (From > 12) || (To > 12)) {\r\n                return false;\r\n            }\r\n        } else {\r\n            if ((From > To) || (From > 31) || (To > 31)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-3 text-right content__shadow bg-white py-4 rounded\">\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text lable__input-width\" >Year</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"2019\" ref={this.YearFrRef} />\r\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"2019\" ref={this.YearToRef} />\r\n                </div>\r\n\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text lable__input-width\">Month</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"1\" ref={this.MonthFrRef} />\r\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"12\" ref={this.MonthToRef} />\r\n                </div>\r\n\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text lable__input-width\">Day</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"1\" ref={this.DayFrRef} />\r\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\r\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"30\" ref={this.DayToRef} />\r\n                </div>\r\n\r\n                <div className=\"input-group mb-5\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text lable__input-width\">Quantity</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"10\" ref={this.qtyRef} />\r\n                </div>\r\n\r\n                <div className=\"input-group d-flex justify-content-center\">\r\n                    <button type=\"button\" className=\"btn btn-success btn__RandomYmd-margin\" onClick={this.onRandomYmd}>Random</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomYmd;","import React, { Component } from 'react';\r\nimport './component.css';\r\n\r\nclass RandomString extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            length: 3,\r\n            isDisable: false\r\n        }\r\n        this.prefixRef = React.createRef();\r\n        this.fromRef = React.createRef();\r\n        this.toRef = React.createRef();\r\n        this.typeRef = React.createRef();\r\n        this.qtyRef = React.createRef();\r\n        this.onRandomString = this.onRandomString.bind(this);\r\n        this.onChangeLen = this.onChangeLen.bind(this);\r\n        this.onChangeSelectBox = this.onChangeSelectBox.bind(this);\r\n    }\r\n\r\n    onRandomString() {\r\n        const { onRandom, onChangeHeader, header } = this.props;\r\n\r\n        let prefix = this.prefixRef.current.value;\r\n        let from = Number(this.fromRef.current.value);\r\n        let to = Number(this.toRef.current.value);\r\n        let type = this.typeRef.current.value;\r\n        let qty = Number(this.qtyRef.current.value);\r\n        let result = '';\r\n        if (from === '' || to === '') {\r\n            alert('Please enter From-To.')\r\n        } else if (isNaN(from) || isNaN(to)) {\r\n            alert('From - To must number.')\r\n        }\r\n        else if (from > to) {\r\n            alert('From is bigger than To. Please re-enter correctly.')\r\n        } else {\r\n\r\n            if (type === 'random') {\r\n                for (let i = 0; i < qty; i++) {\r\n                    let number = Math.floor((Math.random() * ((to + 1) - from)) + from);\r\n                    let numberLen = number.toString().length;\r\n                    let toLen = to.toString().length;\r\n                    if (numberLen < toLen) {\r\n                        for (let i = numberLen; i < toLen; i++) {\r\n                            number = '0' + number;\r\n                        }\r\n                    }\r\n                    result += prefix + number + '\\r';\r\n                }\r\n            } else {\r\n                for (let i = from; i <= to; i++) {\r\n                    result += prefix + i + '\\r';\r\n                }\r\n            }\r\n        }\r\n\r\n        onRandom(result);\r\n        onChangeHeader(header[1]);\r\n    }\r\n\r\n    onChangeLen() {\r\n        let prefix = this.prefixRef.current.value;\r\n        let lenPrefix = prefix.length;\r\n        let to = this.toRef.current.value;\r\n        let lenTo = to.length;\r\n        let qty = this.qtyRef.current.value;\r\n        let lenQty = qty.length;\r\n        let type = this.typeRef.current.value;\r\n        let length = 0;\r\n        if (type === 'random') {\r\n            length = lenPrefix + lenTo;\r\n        } else {\r\n            length = lenPrefix + lenQty;\r\n        }\r\n        this.setState({ length: length })\r\n    }\r\n\r\n    onChangeSelectBox(e) {\r\n        let isDisable;\r\n        if (e.target.value === 'order_list') {\r\n            isDisable = true;\r\n        } else {\r\n            isDisable = false;\r\n        }\r\n            this.setState({isDisable: isDisable})\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-3 text-right content__shadow bg-white py-4 rounded\">\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text lable__input-width\">Prefix</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" ref={this.prefixRef} onChange={this.onChangeLen} />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\">{this.state.length}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text lable__input-width\" >From</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"000\" ref={this.fromRef} />\r\n                </div>\r\n\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text lable__input-width\" >To</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"100\" ref={this.toRef} onChange={this.onChangeLen} />\r\n                </div>\r\n\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text lable__input-width\">Type</label>\r\n                    </div>\r\n                    <select className=\"form-control\" ref={this.typeRef} onChange={this.onChangeSelectBox}>\r\n                        <option value='random'>Random</option>\r\n                        <option value='order_list'>Order List</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text lable__input-width\">Quantity</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"10\" ref={this.qtyRef} onChange={this.onChangeLen} disabled={(this.state.isDisable) ? true : '' }/>\r\n                </div>\r\n\r\n                <div className=\"input-group d-flex justify-content-center\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onRandomString}>Random</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomString;","import React, { Component } from 'react';\r\n\r\nclass TextArea extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        return this.props.onRandom(event.target.value);\r\n    }\r\n    render() {\r\n        const { result } = this.props;\r\n        return (\r\n            <div className=\"col-3 text-right content__shadow bg-white py-4 mx-3 rounded\">\r\n                <div className=\"input-form\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text w-100 d-flex justify-content-center\">Result</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <textarea className=\"form-control\" rows=\"11\" value={result} onChange={this.handleChange} ></textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextArea;","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport RandomYmd from './components/RandomYmd';\r\nimport RandomString from './components/RandomString';\r\nimport TextArea from './components/TextArea';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      feature: [\r\n        { \"name\": \"Tool Random\", \"isActive\": true, \"bgColor\": \"bg-danger\" },\r\n        { \"name\": \"Random String\", \"isActive\": false, \"bgColor\": \"bg-primary\" },\r\n        { \"name\": \"Random Year-Month-Day\", \"isActive\": false, \"bgColor\": \"bg-success\" },\r\n      ],\r\n      result: ''\r\n    }\r\n    this.onChangeHeader = this.onChangeHeader.bind(this);\r\n    this.onRandom = this.onRandom.bind(this);\r\n  }\r\n\r\n  onChangeHeader(item) {\r\n    const { feature } = this.state;\r\n    const index = feature.indexOf(item);\r\n    let state = feature;\r\n    state.map((item) => item.isActive = false)\r\n    state[index].isActive = true;\r\n    this.setState({\r\n      feature: feature\r\n    });\r\n  }\r\n\r\n  onRandom(result) {\r\n    this.setState({ result: result });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {\r\n          this.state.feature.filter((item) => item.isActive === true).map((item, index) => <Header feature={item} key={index} />)\r\n        }\r\n\r\n        <div className=\"container-fluid mt-4 content__height\">\r\n          <div className=\"row d-flex justify-content-center h-100\">\r\n            <RandomString onRandom={this.onRandom} onChangeHeader={this.onChangeHeader} header={this.state.feature} />\r\n            <TextArea\r\n              result={this.state.result}\r\n              onRandom={this.onRandom} />\r\n            <RandomYmd onRandom={this.onRandom} onChangeHeader={this.onChangeHeader} header={this.state.feature} />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
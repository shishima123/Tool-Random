{"version":3,"sources":["components/Header.js","components/RandomYmd.js","components/RandomString.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["Header","feature","this","props","className","bgColor","headerName","name","react_default","a","createElement","Component","RandomYmd","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","YearFrRef","React","createRef","YearToRef","MonthFrRef","MonthToRef","DayFrRef","DayToRef","qtyRef","onRandomYmd","bind","assertThisInitialized","_this$props","onRandom","onChangeHeader","header","onNotifySuccess","onNotifyFail","YearFr","Number","current","value","YearTo","MonthFr","MonthTo","DayFr","DayTo","qty","result","isNaN","alert","chkValidateInput","i","year","Math","floor","random","month","day","toString","type","From","To","defaultValue","ref","onClick","RandomString","state","length","isDisable","prefixRef","fromRef","toRef","typeRef","chkbox","onRandomString","onChangeLen","onChangeSelectBox","prefix","from","to","checked","number","numberLen","toLen","setState","e","target","onChange","defaultChecked","disabled","TextArea","handleChange","onClickCopy","textAreaRef","event","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","select","document","execCommand","onNotify","rows","App","isActive","item","index","indexOf","map","success","error","_this2","getFeature","filter","components_Header","key","components_RandomString","components_TextArea","components_RandomYmd","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","transition","Flip","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d455384c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./component.css\";\n\nclass Header extends Component {\n    render() {\n        const { feature } = this.props;\n        let className = \"container-fluid header-height content__shadow \" + feature.bgColor;\n        let headerName = feature.name;\n        return (\n            <div className={className}>\n                <div className=\"row h-100\">\n                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\n                        <h2 className=\"m-0 font-weight-bold\">{headerName}</h2>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './component.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass RandomYmd extends Component {\n    constructor(props) {\n        super(props);\n        this.YearFrRef = React.createRef();\n        this.YearToRef = React.createRef();\n        this.MonthFrRef = React.createRef();\n        this.MonthToRef = React.createRef();\n        this.DayFrRef = React.createRef();\n        this.DayToRef = React.createRef();\n        this.qtyRef = React.createRef();\n        this.onRandomYmd = this.onRandomYmd.bind(this);\n    }\n\n    onRandomYmd() {\n        const { onRandom, onChangeHeader, header, onNotifySuccess, onNotifyFail } = this.props;\n\n        let YearFr = Number(this.YearFrRef.current.value);\n        let YearTo = Number(this.YearToRef.current.value);\n        let MonthFr = Number(this.MonthFrRef.current.value);\n        let MonthTo = Number(this.MonthToRef.current.value);\n        let DayFr = Number(this.DayFrRef.current.value);\n        let DayTo = Number(this.DayToRef.current.value);\n        let qty = Number(this.qtyRef.current.value);\n        let result = '';\n        if (isNaN(YearFr) || isNaN(YearTo) || isNaN(MonthFr) || isNaN(MonthTo) || isNaN(DayFr) || isNaN(DayTo) || isNaN(qty)) {\n            alert('The input value must be the number.');\n        } else if (!this.chkValidateInput('Year', YearFr, YearTo)) {\n            alert('Please check Year value.');\n        } else if (!this.chkValidateInput('Month', MonthFr, MonthTo)) {\n            alert('Please check Month value.');\n        } else if (!this.chkValidateInput('Day', DayFr, DayTo)) {\n            alert('Please check Day value.');\n        } else {\n            for (let i = 0; i < qty; i++) {\n                var year = Math.floor((Math.random() * ((YearTo + 1) - YearFr)) + YearFr);\n                var month = Math.floor((Math.random() * ((MonthTo + 1) - MonthFr)) + MonthFr);\n                if (month === 2) {\n                    var day = Math.floor((Math.random() * ((DayTo + 1) - DayFr)) + DayFr);\n                    if (day > 28) {\n                        day = day - 3;\n                    }\n                } else {\n                    day = Math.floor((Math.random() * ((DayTo + 1) - DayFr)) + DayFr);\n                }\n\n                if (month < 10) {\n                    month = '0' + month;\n                }\n\n                if (day < 10) {\n                    day = '0' + day;\n                }\n                result += year.toString() + month.toString() + day.toString() + \"\\r\";\n            }\n\n            if (result !== '') {\n                onRandom(result);\n                onChangeHeader(header[2]);\n                onNotifySuccess();\n            } else {\n                onNotifyFail();\n            }\n        }\n    }\n\n    chkValidateInput(type, From, To) {\n        if (type === \"Year\") {\n            if (From > To) {\n                return false;\n            }\n        } else if (type === \"Month\") {\n            if ((From > To) || (From > 12) || (To > 12)) {\n                return false;\n            }\n        } else {\n            if ((From > To) || (From > 31) || (To > 31)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render() {\n        return (\n            <div className=\"col-3 text-right content__shadow bg-white py-4 rounded\">\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\" >Year</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius_right\" defaultValue=\"2019\" ref={this.YearFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius_left\" defaultValue=\"2019\" ref={this.YearToRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Month</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius_right\" defaultValue=\"1\" ref={this.MonthFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius_left\" defaultValue=\"12\" ref={this.MonthToRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Day</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius_right\" defaultValue=\"1\" ref={this.DayFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius_left\" defaultValue=\"30\" ref={this.DayToRef} />\n                </div>\n\n                <div className=\"input-group mb-5\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\">Quantity</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"10\" ref={this.qtyRef} />\n                </div>\n\n                <div className=\"input-group d-flex justify-content-center\">\n                    <button type=\"button\" className=\"btn purple-gradient text-white btn__RandomYmd-margin\" onClick={this.onRandomYmd}>Random</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomYmd;","import React, { Component } from 'react';\nimport './component.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass RandomString extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            length: 3,\n            isDisable: false\n        }\n        this.prefixRef = React.createRef();\n        this.fromRef = React.createRef();\n        this.toRef = React.createRef();\n        this.typeRef = React.createRef();\n        this.qtyRef = React.createRef();\n        this.chkbox = React.createRef();\n        this.onRandomString = this.onRandomString.bind(this);\n        this.onChangeLen = this.onChangeLen.bind(this);\n        this.onChangeSelectBox = this.onChangeSelectBox.bind(this);\n    }\n\n    onRandomString() {\n        const { onRandom, onChangeHeader, header, onNotifySuccess, onNotifyFail } = this.props;\n\n        let prefix = this.prefixRef.current.value;\n        let from = Number(this.fromRef.current.value);\n        let to = Number(this.toRef.current.value);\n        let type = this.typeRef.current.value;\n        let qty = Number(this.qtyRef.current.value);\n        let chkbox = Number(this.chkbox.current.checked);\n        let result = '';\n        if (from === '' || to === '') {\n            alert('Please enter From-To.');\n        } else if (isNaN(from) || isNaN(to)) {\n            alert('From - To must number.');\n        } else if (isNaN(qty)) {\n            alert('The quantity must be number.');\n        } else if (from > to) {\n            alert('From is bigger than To. Please re-enter correctly.');\n        } else {\n            if (type === 'random') {\n                for (let i = 0; i < qty; i++) {\n                    let number = Math.floor((Math.random() * ((to + 1) - from)) + from);\n                    let numberLen = number.toString().length;\n                    let toLen = to.toString().length;\n\n                    // Add 0 forward\n                    if (chkbox === 1) {\n                        if (numberLen < toLen) {\n                            for (let i = numberLen; i < toLen; i++) {\n                                number = '0' + number;\n                            }\n                        }\n                    }\n                    result += prefix + number + '\\r';\n                }\n            } else {\n                if (to - from < 10000) {\n                    for (let i = from; i <= to; i++) {\n                        result += prefix + i + '\\r';\n                    }\n                } else {\n                    alert('List Order Too Large.')\n                }\n            }\n            if (result !== '') {\n                onRandom(result);\n                onChangeHeader(header[1]);\n                onNotifySuccess();\n            } else {\n                onNotifyFail();\n            }\n        }\n    }\n\n    onChangeLen() {\n        let prefix = this.prefixRef.current.value;\n        let lenPrefix = prefix.length;\n        let to = this.toRef.current.value;\n        let lenTo = to.length;\n        let length = lenPrefix + lenTo;\n        this.setState({ length: length })\n    }\n\n    onChangeSelectBox(e) {\n        let isDisable;\n        if (e.target.value === 'order_list') {\n            isDisable = true;\n        } else {\n            isDisable = false;\n        }\n        this.setState({ isDisable: isDisable })\n\n    }\n\n    render() {\n        return (\n            <div className=\"col-3 text-right content__shadow bg-white py-4 rounded\">\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Prefix</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" ref={this.prefixRef} onChange={this.onChangeLen} />\n                    <div className=\"input-group-append \">\n                        <span className=\"input-group-text cloudy-knoxville-gradient\">{this.state.length}</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\" >From</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"000\" ref={this.fromRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\" >To</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"100\" ref={this.toRef} onChange={this.onChangeLen} />\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text input__border-radius_right input__border-left\">\n                            <input type=\"checkbox\" defaultChecked ref={this.chkbox} disabled={(this.state.isDisable) ? true : ''} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <label className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Type</label>\n                    </div>\n                    <select className=\"form-control\" ref={this.typeRef} onChange={this.onChangeSelectBox}>\n                        <option value='random'>Random</option>\n                        <option value='order_list'>Order List</option>\n                    </select>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width cloudy-knoxville-gradient\">Quantity</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"10\" ref={this.qtyRef} disabled={(this.state.isDisable) ? true : ''} />\n                </div>\n\n                <div className=\"input-group d-flex justify-content-center\">\n                    <button type=\"button\" className=\"btn blue-gradient text-white\" onClick={this.onRandomString}>Random</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomString;","import React, { Component } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\n\nclass TextArea extends Component {\n    constructor() {\n        super();\n        this.handleChange = this.handleChange.bind(this);\n        this.onClickCopy = this.onClickCopy.bind(this);\n        this.textAreaRef = React.createRef();\n    }\n\n    handleChange(event) {\n        return this.props.onRandom(event.target.value);\n    }\n\n    onNotify() {\n        return toast.info('Copied ¯\\\\_(ツ)_/¯', {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false,\n            className: 'rotateY animated'\n        });\n    }\n\n    onClickCopy(e) {\n        this.textAreaRef.current.select();\n        document.execCommand('copy');\n        this.onNotify();\n    }\n\n    render() {\n        const { result, header } = this.props;\n        let className = \"input-group-text w-100 d-flex justify-content-center label__border-radius_bottom \";\n        if (header.bgColor !== 'bg-danger') {\n            className += \"text-white \" + header.bgColor;\n        }\n\n        return (\n            <div className=\"col-3 text-center content__shadow bg-white py-4 mx-3 rounded\">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend w-100\">\n                        <span className={className}>Result</span>\n                    </div>\n                </div>\n                <div className=\"input-group\">\n                    <textarea className=\"form-control textarea__border-radius_top\" rows=\"11\" value={result} onChange={this.handleChange} ref={this.textAreaRef}></textarea>\n                </div>\n                <button className=\"btn btn-success\" onClick={this.onClickCopy}>Copy</button>\n            </div>\n        )\n    }\n}\n\nexport default TextArea;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport RandomYmd from './components/RandomYmd';\nimport RandomString from './components/RandomString';\nimport TextArea from './components/TextArea';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Flip } from 'react-toastify';\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            feature: [\n                { \"name\": \"Tool Random\", \"isActive\": true, \"bgColor\": \"bg-danger\" },\n                { \"name\": \"Random String\", \"isActive\": false, \"bgColor\": \"blue-gradient\" },\n                { \"name\": \"Random Year-Month-Day\", \"isActive\": false, \"bgColor\": \"purple-gradient\" },\n            ],\n            result: ''\n        }\n        this.onChangeHeader = this.onChangeHeader.bind(this);\n        this.onRandom = this.onRandom.bind(this);\n        this.onNotifySuccess = this.onNotifySuccess.bind(this);\n        this.onNotifyFail = this.onNotifyFail.bind(this);\n    }\n\n    onChangeHeader(item) {\n        const { feature } = this.state;\n        const index = feature.indexOf(item);\n        let state = feature;\n        state.map((item) => item.isActive = false)\n        state[index].isActive = true;\n        this.setState({\n            feature: feature\n        });\n    }\n\n    onRandom(result) {\n        this.setState({ result: result });\n    }\n\n    onNotifySuccess() {\n        return toast.success('🦄 Random Complete!', {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false,\n            className: 'rotateY animated'\n        });\n    }\n\n    onNotifyFail() {\n        return toast.error('🦄 Random Fail!', {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false,\n            className: 'rotateY animated'\n        });\n    }\n\n    render() {\n        let getFeature = this.state.feature.filter((item) => item.isActive === true);\n        return (\n            <div className=\"App\">\n                {\n                    getFeature.map((item, index) =>\n                        <Header\n                            feature={item}\n                            key={index}\n                        />)\n                }\n\n                <div className=\"container-fluid mt-4 content__height\">\n                    <div className=\"row d-flex justify-content-center h-100\">\n                        <RandomString\n                            onRandom={this.onRandom}\n                            onChangeHeader={this.onChangeHeader}\n                            header={this.state.feature}\n                            onNotifySuccess={this.onNotifySuccess}\n                            onNotifyFail={this.onNotifyFail}\n                        />\n                        {\n                            getFeature.map((item, index) =>\n                                <TextArea\n                                    key={index}\n                                    result={this.state.result}\n                                    onRandom={this.onRandom}\n                                    header={item}\n                                />)\n                        }\n\n                        <RandomYmd\n                            onRandom={this.onRandom}\n                            onChangeHeader={this.onChangeHeader}\n                            header={this.state.feature}\n                            onNotifySuccess={this.onNotifySuccess}\n                            onNotifyFail={this.onNotifyFail}\n                        />\n\n                        <ToastContainer\n                            position=\"top-right\"\n                            autoClose={3000}\n                            hideProgressBar\n                            newestOnTop\n                            closeOnClick\n                            rtl={false}\n                            pauseOnVisibilityChange={false}\n                            draggable={false}\n                            pauseOnHover\n                            transition={Flip}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Header.js","components/RandomYmd.js","components/RandomString.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["Header","feature","this","props","className","bgColor","headerName","name","react_default","a","createElement","Component","RandomYmd","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","YearFrRef","React","createRef","YearToRef","MonthFrRef","MonthToRef","DayFrRef","DayToRef","qtyRef","onRandomYmd","bind","assertThisInitialized","_this$props","onRandom","onChangeHeader","header","YearFr","Number","current","value","YearTo","MonthFr","MonthTo","DayFr","DayTo","qty","result","chkValidateInput","i","year","Math","floor","random","month","day","toString","alert","type","From","To","defaultValue","ref","onClick","RandomString","state","length","prefixRef","fromRef","toRef","typeRef","onRandomString","onChangeLen","prefix","from","to","isNaN","number","numberLen","toLen","lenPrefix","lenTo","lenQty","setState","onChange","TextArea","handleChange","event","target","rows","App","isActive","item","index","indexOf","map","filter","components_Header","key","components_RandomString","components_TextArea","components_RandomYmd","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a53bd114.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./component.css\";\n\nclass Header extends Component {\n    render() {\n        const { feature } = this.props;\n        let className = \"container-fluid header-height content__shadow \" + feature.bgColor;\n        let headerName = feature.name;\n        return (\n            <div className={className}>\n                <div className=\"row h-100\">\n                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\n                        <h2 className=\"m-0 font-weight-bold\">{headerName}</h2>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass RandomYmd extends Component {\n    constructor(props) {\n        super(props);\n        this.YearFrRef = React.createRef();\n        this.YearToRef = React.createRef();\n        this.MonthFrRef = React.createRef();\n        this.MonthToRef = React.createRef();\n        this.DayFrRef = React.createRef();\n        this.DayToRef = React.createRef();\n        this.qtyRef = React.createRef();\n        this.onRandomYmd = this.onRandomYmd.bind(this);\n    }\n\n    onRandomYmd() {\n        const { onRandom, onChangeHeader, header } = this.props;\n\n        let YearFr = Number(this.YearFrRef.current.value);\n        let YearTo = Number(this.YearToRef.current.value);\n        let MonthFr = Number(this.MonthFrRef.current.value);\n        let MonthTo = Number(this.MonthToRef.current.value);\n        let DayFr = Number(this.DayFrRef.current.value);\n        let DayTo = Number(this.DayToRef.current.value);\n        let qty = Number(this.qtyRef.current.value);\n        let result = '';\n        if (!this.chkValidateInput('Year', YearFr, YearTo)) {\n            alert('Please check Year value.');\n        } else if (!this.chkValidateInput('Month', MonthFr, MonthTo)) {\n            alert('Please check Month value.');\n        } else if (!this.chkValidateInput('Day', DayFr, DayTo)) {\n            alert('Please check Day value.');\n        } else {\n            for (let i = 0; i < qty; i++) {\n                var year = Math.floor((Math.random() * ((YearTo + 1) - YearFr)) + YearFr);\n                var month = Math.floor((Math.random() * ((MonthTo + 1) - MonthFr)) + MonthFr);\n                if (month === 2) {\n                    var day = Math.floor((Math.random() * ((DayTo + 1) - DayFr)) + DayFr);\n                    if (day > 28) {\n                        day = day - 3;\n                    }\n                } else {\n                    day = Math.floor((Math.random() * ((DayTo + 1) - DayFr)) + DayFr);\n                }\n\n                if (month < 10) {\n                    month = '0' + month;\n                }\n\n                if (day < 10) {\n                    day = '0' + day;\n                }\n                result += year.toString() + month.toString() + day.toString() + \"\\r\";\n            }\n        }\n        onRandom(result);\n        onChangeHeader(header[2]);\n    }\n\n    chkValidateInput(type, From, To) {\n        if (type === \"Year\") {\n            if (From > To) {\n                return false;\n            }\n        } else if (type === \"Month\") {\n            if ((From > To) || (From > 12) || (To > 12)) {\n                return false;\n            }\n        } else {\n            if ((From > To) || (From > 31) || (To > 31)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render() {\n        return (\n            <div className=\"col-3 text-right content__shadow bg-white py-4 rounded\">\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\" >Year</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"2019\" ref={this.YearFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"2019\" ref={this.YearToRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\">Month</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"1\" ref={this.MonthFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"12\" ref={this.MonthToRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\">Day</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"1\" ref={this.DayFrRef} />\n                    <span>&nbsp;&nbsp;~&nbsp;&nbsp;</span>\n                    <input type=\"text\" className=\"form-control input__border-radius\" defaultValue=\"30\" ref={this.DayToRef} />\n                </div>\n\n                <div className=\"input-group mb-5\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\">Quantity</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"10\" ref={this.qtyRef} />\n                </div>\n\n                <div className=\"input-group d-flex justify-content-center\">\n                    <button type=\"button\" className=\"btn btn-success btn__RandomYmd-margin\" onClick={this.onRandomYmd}>Random</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomYmd;","import React, { Component } from 'react';\nimport './component.css';\n\nclass RandomString extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            length: 3,\n        }\n        this.prefixRef = React.createRef();\n        this.fromRef = React.createRef();\n        this.toRef = React.createRef();\n        this.typeRef = React.createRef();\n        this.qtyRef = React.createRef();\n        this.onRandomString = this.onRandomString.bind(this);\n        this.onChangeLen = this.onChangeLen.bind(this);\n    }\n\n    onRandomString() {\n        const { onRandom, onChangeHeader, header } = this.props;\n\n        let prefix = this.prefixRef.current.value;\n        let from = Number(this.fromRef.current.value);\n        let to = Number(this.toRef.current.value);\n        let type = this.typeRef.current.value;\n        let qty = Number(this.qtyRef.current.value);\n        let result = '';\n        if (from === '' || to === '') {\n            alert('Please enter From-To.')\n        } else if (isNaN(from) || isNaN(to)) {\n            alert('From - To must number.')\n        }\n        else if (from > to) {\n            alert('From is bigger than To. Please re-enter correctly.')\n        } else {\n\n            if (type === 'random') {\n                for (let i = 0; i < qty; i++) {\n                    let number = Math.floor((Math.random() * ((to + 1) - from)) + from);\n                    let numberLen = number.toString().length;\n                    let toLen = to.toString().length;\n                    if (numberLen < toLen) {\n                        for (let i = numberLen; i < toLen; i++) {\n                            number = '0' + number;\n                        }\n                    }\n                    result += prefix + number + '\\r';\n                }\n            } else {\n                for (let i = 1; i < qty; i++) {\n                    result += prefix + i + '\\r';\n                }\n            }\n        }\n\n        onRandom(result);\n        onChangeHeader(header[1]);\n    }\n\n    onChangeLen() {\n        let prefix = this.prefixRef.current.value;\n        let lenPrefix = prefix.length;\n        let to = this.toRef.current.value;\n        let lenTo = to.length;\n        let qty = this.qtyRef.current.value;\n        let lenQty = qty.length;\n        let type = this.typeRef.current.value;\n        let length = 0;\n        if (type === 'random') {\n            length = lenPrefix + lenTo;\n        } else {\n            length = lenPrefix + lenQty;\n        }\n        this.setState({ length: length })\n    }\n\n    render() {\n        return (\n            <div className=\"col-3 text-right content__shadow bg-white py-4 rounded\">\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\">Prefix</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" ref={this.prefixRef} onChange={this.onChangeLen} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\">{this.state.length}</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\" >From</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"000\" ref={this.fromRef} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\" >To</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"100\" ref={this.toRef} onChange={this.onChangeLen} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <label className=\"input-group-text lable__input-width\">Type</label>\n                    </div>\n                    <select className=\"form-control\" ref={this.typeRef}>\n                        <option value='random'>Random</option>\n                        <option value='order_list'>Order List</option>\n                    </select>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text lable__input-width\">Quantity</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" defaultValue=\"10\" ref={this.qtyRef} onChange={this.onChangeLen} />\n                </div>\n\n                <div className=\"input-group d-flex justify-content-center\">\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onRandomString}>Random</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RandomString;","import React, { Component } from 'react';\n\nclass TextArea extends Component {\n    constructor() {\n        super();\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        return this.props.onRandom(event.target.value);\n    }\n    render() {\n        const { result } = this.props;\n        return (\n            <div className=\"col-3 text-right content__shadow bg-white py-4 mx-3 rounded\">\n                <div className=\"input-form\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text w-100 d-flex justify-content-center\">Result</span>\n                    </div>\n                </div>\n                <div className=\"input-group\">\n                    <textarea className=\"form-control\" rows=\"11\" value={result} onChange={this.handleChange} ></textarea>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextArea;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport RandomYmd from './components/RandomYmd';\nimport RandomString from './components/RandomString';\nimport TextArea from './components/TextArea';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      feature: [\n        { \"name\": \"Tool Random\", \"isActive\": true, \"bgColor\": \"bg-danger\" },\n        { \"name\": \"Random String\", \"isActive\": false, \"bgColor\": \"bg-primary\" },\n        { \"name\": \"Random Year-Month-Day\", \"isActive\": false, \"bgColor\": \"bg-success\" },\n      ],\n      result: ''\n    }\n    this.onChangeHeader = this.onChangeHeader.bind(this);\n    this.onRandom = this.onRandom.bind(this);\n  }\n\n  onChangeHeader(item) {\n    const { feature } = this.state;\n    const index = feature.indexOf(item);\n    let state = feature;\n    state.map((item) => item.isActive = false)\n    state[index].isActive = true;\n    this.setState({\n      feature: feature\n    });\n  }\n\n  onRandom(result) {\n    this.setState({ result: result });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.feature.filter((item) => item.isActive === true).map((item, index) => <Header feature={item} key={index} />)\n        }\n\n        <div className=\"container-fluid mt-4 content__height\">\n          <div className=\"row d-flex justify-content-center h-100\">\n            <RandomString onRandom={this.onRandom} onChangeHeader={this.onChangeHeader} header={this.state.feature} />\n            <TextArea\n              result={this.state.result}\n              onRandom={this.onRandom} />\n            <RandomYmd onRandom={this.onRandom} onChangeHeader={this.onChangeHeader} header={this.state.feature} />\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}